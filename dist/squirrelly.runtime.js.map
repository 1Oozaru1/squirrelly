{"version":3,"sources":["webpack://Sqrl/webpack/universalModuleDefinition","webpack://Sqrl/webpack/bootstrap","webpack://Sqrl/./src/filters.js","webpack://Sqrl/./src/compile.js","webpack://Sqrl/./src/helpers.js","webpack://Sqrl/./src/utils.js","webpack://Sqrl/./src/express.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","src_filters","str","e","escMap","&","<",">","\"","'","/","newStr","String","test","replace","defaultFilters","defaultFilterCache","start","end","setDefaultFilters","obj","cacheDefaultFilters","autoEscaping","bool","autoEscape","compile","src_helpers","defineFilter","callback","defineHelper","Render","template","options","src_namespaceObject","templateFunc","express"],"mappings":"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","file":"squirrelly.runtime.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sqrl\"] = factory();\n\telse\n\t\troot[\"Sqrl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default {\r\n  d: function (str) {\r\n    return str\r\n  },\r\n  e: function (str) {\r\n    var escMap = {\r\n      '&': '&amp;',\r\n      '<': '&lt;',\r\n      '>': '&gt;',\r\n      '\"': '&quot;',\r\n      \"'\": '&#39;',\r\n      '/': '&#x2F;'\r\n    }\r\n        // To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\r\n    function replaceChar (s) {\r\n      return escMap[s]\r\n    }\r\n    var newStr = String(str)\r\n    if (/[&<>\"'/]/.test(newStr)) {\r\n      return newStr.replace(/[&<>\"']/g, replaceChar)\r\n    } else {\r\n      return newStr\r\n    }\r\n  }\r\n}\r\n// Don't need a filter for unescape because that's just a flag telling Squirrelly not to escape\r\n\r\nexport var defaultFilters = {\r\n    /* All strings are automatically passed through\r\neach of the default filters the user\r\nHas set to true. This opens up a realm of possibilities like autoEscape, etc.\r\nList of shortened letters: d: default, e: escape, u: unescape. Escape and Unescape are also valid filter names */\r\n    // e: false, // Escape is turned off by default for performance\r\n}\r\n\r\nexport var defaultFilterCache = {\r\n  start: '',\r\n  end: ''\r\n}\r\n\r\nexport function setDefaultFilters (obj) {\r\n  if (obj === 'clear') {\r\n    defaultFilters = {}\r\n  } else {\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        defaultFilters[key] = obj[key]\r\n      }\r\n    }\r\n  }\r\n  cacheDefaultFilters()\r\n}\r\n\r\nexport function autoEscaping (bool) {\r\n  if (bool) {\r\n    autoEscape = true\r\n  } else {\r\n    autoEscape = false\r\n  }\r\n}\r\n\r\nexport var autoEscape = true\r\n\r\nexport function cacheDefaultFilters () {\r\n  defaultFilterCache = {\r\n    start: '',\r\n    end: ''\r\n  }\r\n  for (var key in defaultFilters) {\r\n    if (!defaultFilters.hasOwnProperty(key) || !defaultFilters[key]) continue\r\n    defaultFilterCache.start += 'Sqrl.F.' + key + '('\r\n    defaultFilterCache.end += ')'\r\n  }\r\n}\r\nexport function parseFiltered (initialString, filterString) {\r\n  var filtersArray\r\n  var safe\r\n  var filterStart = ''\r\n  var filterEnd = ''\r\n  if (filterString && filterString !== '') {\r\n    filtersArray = filterString.split('|')\r\n    for (var i = 0; i < filtersArray.length; i++) {\r\n      filtersArray[i] = filtersArray[i].trim()\r\n      if (filtersArray[i] === '') continue\r\n      if (filtersArray[i] === 'safe') {\r\n        safe = true\r\n        continue\r\n      }\r\n      filterStart = 'Sqrl.F.' + filtersArray[i] + '(' + filterStart\r\n      filterEnd += ')'\r\n    }\r\n  }\r\n  filterStart += defaultFilterCache.start\r\n  filterEnd += defaultFilterCache.end\r\n  if (!safe && autoEscape) {\r\n    filterStart += 'Sqrl.F.e('\r\n    filterEnd += ')'\r\n  }\r\n\r\n  return filterStart + initialString + filterEnd\r\n}\r\n","/* global RUNTIME */\r\nimport {\r\n    regEx\r\n} from './regexps'\r\nimport nativeHelpers from './nativeHelpers'\r\nimport {\r\n    parseFiltered\r\n} from './filters'\r\nimport {\r\n    replaceParamHelpers,\r\n    setup,\r\n    takedown\r\n} from './utils'\r\n\r\nfunction Compile (str) {\r\n  var lastIndex = 0\r\n  var funcStr = ''\r\n  var helperArray = []\r\n  var helperNumber = -1\r\n  var helperAutoId = 0\r\n  var helperContainsBlocks = {}\r\n  var m\r\n  setup()\r\n  while ((m = regEx.exec(str)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n    if (m.index === regEx.lastIndex) {\r\n      regEx.lastIndex++\r\n    }\r\n    if (funcStr === '') {\r\n      funcStr += \"var tmpltRes='\" + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n    } else {\r\n      if (lastIndex !== m.index) {\r\n        funcStr += \"tmpltRes+='\" + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n      }\r\n    }\r\n    lastIndex = m[0].length + m.index\r\n    if (m[1]) {\r\n            // It's a global ref. p4 = filters\r\n      funcStr += 'tmpltRes+=' + globalRef(m[1], m[4]) + ';'\r\n    } else if (m[3]) {\r\n            // It's a helper ref. p2 = id (with ':' after it) or path, p4 = filters\r\n      funcStr += 'tmpltRes+=' + helperRef(m[3], m[2], m[4]) + ';'\r\n    } else if (m[5]) {\r\n            // It's a helper oTag. p6 parameters, p7 id\r\n      var id = m[7]\r\n      if (id === '' || id === null) {\r\n        id = helperAutoId\r\n        helperAutoId++\r\n      }\r\n      var native = nativeHelpers.hasOwnProperty(m[5]) // true or false\r\n      helperNumber += 1\r\n      var params = m[6] || ''\r\n      params = replaceParamHelpers(params)\r\n      if (!native) {\r\n        params = '[' + params + ']'\r\n      }\r\n      var helperTag = {\r\n        name: m[5],\r\n        id: id,\r\n        params: params,\r\n        native: native\r\n      }\r\n      helperArray[helperNumber] = helperTag\r\n      if (native) {\r\n        funcStr += nativeHelpers[m[5]].helperStart(params, id)\r\n      } else {\r\n        funcStr += 'tmpltRes+=Sqrl.H.' + m[5] + '(' + params + ',function(hvals){var hvals' + id + '=hvals;'\r\n      }\r\n    } else if (m[8]) {\r\n            // It's a helper cTag.\r\n      var mostRecentHelper = helperArray[helperNumber]\r\n      if (mostRecentHelper && mostRecentHelper.name === m[8]) {\r\n        helperNumber -= 1\r\n        if (mostRecentHelper.native === true) {\r\n          funcStr += nativeHelpers[mostRecentHelper.name].helperEnd(mostRecentHelper.params, mostRecentHelper.id)\r\n        } else {\r\n          if (helperContainsBlocks[mostRecentHelper.id]) {\r\n            funcStr += 'return tmpltRes}});'\r\n          } else {\r\n            funcStr += 'return tmpltRes});'\r\n          }\r\n        }\r\n      } else {\r\n        console.error(\"Helper beginning & end don't match.\")\r\n      }\r\n    } else if (m[9]) {\r\n            // It's a helper block.\r\n      var parent = helperArray[helperNumber]\r\n      if (parent.native) {\r\n        var nativeH = nativeHelpers[parent.name]\r\n        if (nativeH.blocks && nativeH.blocks[m[9]]) {\r\n          funcStr += nativeH.blocks[m[9]](parent.id)\r\n        } else {\r\n          console.warn(\"Native helper '%s' doesn't accept that block.\", parent.name)\r\n        }\r\n      } else {\r\n        if (!helperContainsBlocks[parent.id]) {\r\n          funcStr += 'return tmpltRes}, {' + m[9] + ':function(hvals){var hvals' + parent.id + \"=hvals;var tmpltRes='';\"\r\n          helperContainsBlocks[parent.id] = true\r\n        } else {\r\n          funcStr += 'return tmpltRes},' + m[9] + ':function(hvals){var hvals' + parent.id + \"=hvals;var tmpltRes='';\"\r\n        }\r\n      }\r\n    } else if (m[10]) {\r\n            // It's a self-closing helper\r\n      var selfClosingParams = m[11] || ''\r\n      selfClosingParams = replaceParamHelpers(selfClosingParams)\r\n\r\n      if (nativeHelpers.hasOwnProperty(m[10]) && nativeHelpers[m[10]].hasOwnProperty('selfClosing')) {\r\n        funcStr += nativeHelpers[m[10]].selfClosing(selfClosingParams)\r\n      } else {\r\n        funcStr += 'tmpltRes+=Sqrl.H.' + m[10] + '(' + selfClosingParams + ');'\r\n      }\r\n    } else {\r\n      console.error('Err: Code 000')\r\n    }\r\n        /* eslint-disable no-inner-declarations */\r\n\r\n    function globalRef (refName, filters) {\r\n      return parseFiltered('options.' + refName, filters)\r\n    }\r\n\r\n    function helperRef (name, id, filters) {\r\n      var prefix\r\n      if (typeof id !== 'undefined') {\r\n        if (/(?:\\.\\.\\/)+/g.test(id)) {\r\n          prefix = helperArray[helperNumber - (id.length / 3) - 1].id\r\n        } else {\r\n          prefix = id.slice(0, -1)\r\n        }\r\n        return parseFiltered('hvals' + prefix + '.' + name, filters)\r\n      } // Implied 'else'\r\n      return parseFiltered('hvals.' + name, filters)\r\n    }\r\n        /* eslint-enable no-inner-declarations */\n  }\r\n  if (str.length > regEx.lastIndex) {\r\n    if (funcStr === '') {\r\n      funcStr += \"var tmpltRes='\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + \"';\"\r\n    } else if (lastIndex !== str.length) {\r\n      funcStr += \"tmpltRes+='\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + \"';\"\r\n    }\r\n  }\r\n  funcStr += 'return tmpltRes'\r\n  takedown()\r\n  var func = new Function('options', 'Sqrl', funcStr.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r')) // eslint-disable-line no-new-func\r\n  return func\r\n}\r\n\r\nif (RUNTIME) {\r\n  Compile = {} // eslint-disable-line no-func-assign\r\n}\r\n\r\nexport default Compile\n","/* global PRODUCTION */\r\nvar helpers = { // For helpers. None included to make it more lightweight\r\n\r\n  Date: function (args, content, blocks, options) {\r\n    var today = new Date()\r\n    var dd = today.getDate()\r\n    var mm = today.getMonth() + 1 // January is 0!\r\n    var yyyy = today.getFullYear()\r\n    if (dd < 10) {\r\n      dd = '0' + dd\r\n    }\r\n    if (mm < 10) {\r\n      mm = '0' + mm\r\n    }\r\n    today = mm + '/' + dd + '/' + yyyy\r\n    return today\r\n  }\r\n}\r\n\r\nif (PRODUCTION) {\r\n  helpers = {}\r\n}\r\n\r\nexport default helpers\r\n","import F from './filters.js'\r\nimport Compile from './compile.js'\r\nimport * as Sqrl from './index.js'\r\nimport H from './helpers.js'\r\nimport nativeHelpers from './nativeHelpers.js'\r\nimport {\r\n    paramHelperRefRegExp,\r\n    tags,\r\n    regEx,\r\n    setRegEx,\r\n    setTags\r\n} from './regexps.js'\r\n\r\nexport function defineFilter (name, callback) {\r\n  F[name] = callback\r\n}\r\n\r\nexport function defineHelper (name, callback) {\r\n  H[name] = callback\r\n}\r\n\r\nexport function defineNativeHelper (name, obj) {\r\n  nativeHelpers[name] = obj\r\n}\r\n\r\nexport var initialSetup = {\r\n  tags: tags,\r\n  regEx: regEx\r\n}\r\nexport function setup () {\r\n  initialSetup = {\r\n    tags: tags,\r\n    regEx: regEx\r\n  }\r\n}\r\n\r\nexport function takedown () {\r\n  setTags(initialSetup.tags)\r\n  setRegEx(initialSetup.regEx)\r\n}\r\n\r\nexport function Render (template, options) {\r\n  if (typeof template === 'function') {\r\n    return template(options, Sqrl)\r\n  } else if (typeof template === 'string') {\r\n    var templateFunc = Compile(template)\r\n    return templateFunc(options, Sqrl)\r\n  }\r\n}\r\n\r\nexport function replaceParamHelpers (params) {\r\n  params = params.replace(paramHelperRefRegExp, function (m, p1, p2) { // p1 scope, p2 string\r\n    if (typeof p2 === 'undefined') {\r\n      return m\r\n    } else {\r\n      if (typeof p1 === 'undefined') {\r\n        p1 = ''\r\n      }\r\n      return 'hvals' + p1 + '.' + p2\r\n    }\r\n  })\r\n  return params\r\n}\n","/* global fs, RUNTIME */\r\nimport {\r\n    Render\r\n} from './utils'\r\nimport Compile from './compile'\r\n\r\nfunction __express (filePath, options, callback) {\r\n  fs.readFile(filePath, function (err, content) {\r\n    if (err) {\r\n      return callback(err)\r\n    }\r\n    var sqrlString = content.toString()\r\n    var template = Compile(sqrlString)\r\n    var renderedFile = Render(template, options)\r\n    return callback(null, renderedFile)\r\n  })\r\n}\r\n\r\nif (RUNTIME) {\r\n  __express = {} // eslint-disable-line no-func-assign\r\n}\r\n\r\nexport default __express\n"],"sourceRoot":""}