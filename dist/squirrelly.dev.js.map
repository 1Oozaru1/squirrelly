{"version":3,"sources":["webpack://Sqrl/webpack/universalModuleDefinition","webpack://Sqrl/webpack/bootstrap","webpack://Sqrl/./src/compile.js","webpack://Sqrl/./src/express.js","webpack://Sqrl/./src/filters.js","webpack://Sqrl/./src/helpers.js","webpack://Sqrl/./src/index.js","webpack://Sqrl/./src/nativeHelpers.js","webpack://Sqrl/./src/regexps.js","webpack://Sqrl/./src/utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;AChFC;AACD;AAIC;AAGA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG;AACpG,SAAS;AACT;AACA,qGAAqG;AACrG;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,SAAS;AACT;AACA,sEAAsE;AACtE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yFAAyF,0BAA0B;AACnH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,qDAAqD,EAAE;AACvD,qBAAqB;AACrB,oDAAoD,EAAE;AACtD;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,gDAAgD,GAAG,6BAA6B,iCAAiC,kBAAkB;AACnI;AACA,iBAAiB;AACjB,gDAAgD,8BAA8B,iCAAiC,kBAAkB;AACjI;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,2EAA2E;AAC3E;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;;;;AAIA;AACA;AACA;AACA,uGAAuG;AACvG,SAAS;AACT,oGAAoG;AACpG;AACA;AACA;AACA;AACA;AACA;;AAEA,aAEA;;AAEA,sE;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB;AACvB,sBAAsB;AACtB,sBAAsB;AACtB,wBAAwB;AACxB,uBAAuB;AACvB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACpGA;AAAA,eAAe;;AAEf;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,aAEA;;AAEA,sE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB6B;AACR;AACM;AACgB;AACuB;;;;;;;;;;;;;ACJlE;AAAA;AACA;AACA,uCAAuC;AACvC,sCAAsC;AACtC,SAAS;AACT;AACA,qBAAqB;AACrB,SAAS;AACT;AACA,+BAA+B;AAC/B,yBAAyB,KAAK;AAC9B;AACA;AACA,KAAK;AACL;AACA,2CAA2C;AAC3C,gCAAgC,uBAAuB,MAAM,2BAA2B,gBAAgB,0BAA0B;AAClI,SAAS;AACT;AACA,oCAAoC,GAAG,8BAA8B,GAAG;AACxE;AACA,KAAK;AACL;AACA;AACA,kDAAkD,gDAAgD,2BAA2B,gBAAgB,0BAA0B;AACvK,SAAS;AACT;AACA,oCAAoC,GAAG,kCAAkC,GAAG;AAC5E;AACA,KAAK;AACL;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,aAEA;AACA,4E;;;;;;;;;;;;;;ACxCA,kEAAkB,oRAAoR;AACtS;;;AAGA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAC6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,oHAAwE;AACxE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,C","file":"squirrelly.dev.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sqrl\"] = factory();\n\telse\n\t\troot[\"Sqrl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import regEx, {\r\n    paramHelperRefRegExp as parameterHelperRefRegEx\r\n} from './regexps'\r\nimport nativeHelpers from './nativeHelpers'\r\nimport {\r\n    defaultFilters,\r\n    parseFiltered\r\n} from './filters'\r\nimport {\r\n    replaceParamHelpers\r\n} from './utils'\r\n\r\nfunction Compile(str) {\r\n    var lastIndex = 0\r\n    var funcStr = \"\"\r\n    var helperArray = [];\r\n    var helperNumber = -1;\r\n    var helperAutoId = 0\r\n    var helperContainsBlocks = {};\r\n    var m;\r\n    while ((m = regEx.exec(str)) !== null) {\r\n        // This is necessary to avoid infinite loops with zero-width matches\r\n        if (m.index === regEx.lastIndex) {\r\n            regEx.lastIndex++;\r\n        }\r\n        if (funcStr === \"\") {\r\n            funcStr += \"var tmpltRes=\\'\" + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n        } else {\r\n            if (lastIndex !== m.index) {\r\n                funcStr += 'tmpltRes+=\\'' + str.slice(lastIndex, m.index).replace(/'/g, \"\\\\'\") + '\\';'\r\n            }\r\n        }\r\n        lastIndex = m[0].length + m.index\r\n        if (m[1]) {\r\n            //It's a global ref. p4 = filters\r\n            funcStr += 'tmpltRes+=' + globalRef(m[1], m[4]) + ';'\r\n        } else if (m[3]) {\r\n            //It's a helper ref. p2 = id (with ':' after it) or path, p4 = filters\r\n            funcStr += 'tmpltRes+=' + helperRef(m[3], m[2], m[4]) + ';'\r\n        } else if (m[5]) {\r\n            //It's a helper oTag. p6 parameters, p7 id\r\n            var id = m[7]\r\n            if (id === \"\" || id === null) {\r\n                id = helperAutoId;\r\n                helperAutoId++;\r\n            }\r\n            var native = nativeHelpers.hasOwnProperty(m[5]) //true or false\r\n            helperNumber += 1;\r\n            var params = m[6] || \"\"\r\n            params = replaceParamHelpers(params)\r\n            if (!native) {\r\n                params = '[' + params + ']'\r\n            }\r\n            var helperTag = {\r\n                name: m[5],\r\n                id: id,\r\n                params: params,\r\n                native: native\r\n            }\r\n            helperArray[helperNumber] = helperTag;\r\n            if (native) {\r\n                var nativeObj = nativeHelpers[m[5]]\r\n                funcStr += nativeObj.helperStart(params, id)\r\n            } else {\r\n                funcStr += 'tmpltRes+=Sqrl.H.' + m[5] + '(' + params + ',function(hvals){var hvals' + id + '=hvals;'\r\n            }\r\n        } else if (m[8]) {\r\n            //It's a helper cTag.\r\n            var mostRecentHelper = helperArray[helperNumber];\r\n            if (mostRecentHelper && mostRecentHelper.name === m[8]) {\r\n                helperNumber -= 1;\r\n                if (mostRecentHelper.native === true) {\r\n                    funcStr += nativeHelpers[mostRecentHelper.name].helperEnd(mostRecentHelper.params, mostRecentHelper.id)\r\n                } else {\r\n                    if (helperContainsBlocks[mostRecentHelper.id]) {\r\n                        funcStr += \"return tmpltRes}});\"\r\n                    } else {\r\n                        funcStr += \"return tmpltRes});\"\r\n                    }\r\n                }\r\n            } else {\r\n                console.error(\"Sorry, looks like your opening and closing tags don't match\")\r\n            }\r\n        } else if (m[9]) {\r\n            //It's a helper block.\r\n            var parent = helperArray[helperNumber]\r\n            if (parent.native) {\r\n                var nativeH = nativeHelpers[parent.name]\r\n                if (nativeH.blocks && nativeH.blocks[m[9]]) {\r\n                    funcStr += nativeH.blocks[m[9]](parent.id)\r\n                } else {\r\n                    console.warn(\"Native helper '%s' doesn't accept that block.\", parent.name)\r\n                }\r\n            } else {\r\n                if (!helperContainsBlocks[parent.id]) {\r\n                    funcStr += \"return tmpltRes}, {\" + m[9] + \":function(hvals){var hvals\" + parent.id + \"=hvals;var tmpltRes=\\'\\';\"\r\n                    helperContainsBlocks[parent.id] = true\r\n                } else {\r\n                    funcStr += \"return tmpltRes},\" + m[9] + \":function(hvals){var hvals\" + parent.id + \"=hvals;var tmpltRes=\\'\\';\"\r\n                }\r\n            }\r\n        } else if (m[10]) {\r\n            //It's a self-closing helper\r\n            var params = m[11] || \"\"\r\n            params = replaceParamHelpers(params)\r\n\r\n            if (nativeHelpers.hasOwnProperty(m[10]) && nativeHelpers[m[10]].hasOwnProperty('selfClosing')) {\r\n                funcStr += nativeHelpers[m[10]].selfClosing(params)\r\n            } else {\r\n                funcStr += 'tmpltRes+=Sqrl.H.' + m[10] + '(' + params + ');'\r\n            }\r\n        } else {\r\n            console.error(\"Err: Code 000\")\r\n        }\r\n\r\n        function globalRef(refName, filters) {\r\n            return parseFiltered('options.' + refName, filters)\r\n        }\r\n\r\n        function helperRef(name, id, filters) {\r\n            var prefix;\r\n            if (typeof id !== 'undefined') {\r\n                if (/(?:\\.\\.\\/)+/g.test(id)) {\r\n                    prefix = helperArray[helperNumber - (id.length / 3) - 1].id\r\n                } else {\r\n                    prefix = id.slice(0, -1)\r\n                }\r\n                return parseFiltered(\"hvals\" + prefix + \".\" + name, filters)\r\n            } //Implied 'else'\r\n            return parseFiltered(\"hvals.\" + name, filters)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    if (str.length > regEx.lastIndex) {\r\n        if (funcStr === \"\") {\r\n            funcStr += \"var tmpltRes=\\'\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + '\\';'\r\n        } else if (lastIndex !== str.length) {\r\n            funcStr += \"tmpltRes+=\\'\" + str.slice(lastIndex, str.length).replace(/'/g, \"\\\\'\") + '\\';'\r\n        }\r\n    }\r\n    funcStr += 'return tmpltRes'\r\n    var func = new Function('options', 'Sqrl', funcStr.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r'))\r\n    return func\r\n}\r\n\r\nif (RUNTIME) {\r\n    Compile = {}\r\n}\r\n\r\nexport default Compile","export default function (filePath, options, callback) {\r\n    fs.readFile(filePath, function (err, content) {\r\n        if (err) {\r\n            return callback(err)\r\n        }\r\n        var sqrlString = content.toString()\r\n        var template = Sqrl.Precompile(sqrlString)\r\n        var renderedFile = Sqrl.Render(template, options)\r\n        return callback(null, renderedFile)\r\n    })\r\n}","export default {\r\n    d: function (str) {\r\n        return str\r\n    },\r\n    e: function (str) {\r\n        var escMap = {\r\n            \"&\": \"&amp;\",\r\n            \"<\": \"&lt;\",\r\n            \">\": \"&gt;\",\r\n            '\"': \"&quot;\",\r\n            \"'\": \"&#39;\",\r\n            \"/\": \"&#x2F;\"\r\n        }\r\n        //To deal with XSS. Based on Escape implementations of Mustache.JS and Marko, then customized.\r\n        function replaceChar(s) {\r\n            return escMap[s]\r\n        }\r\n        var newStr = String(str)\r\n        if (/[&<>\"'\\/]/.test(newStr)) {\r\n            return newStr.replace(/[&<>\"'\\/]/g, replaceChar)\r\n        } else {\r\n            return newStr\r\n        }\r\n    }\r\n}\r\n//Don't need a filter for unescape because that's just a flag telling Squirrelly not to escape\r\n\r\nexport var defaultFilters = {\r\n    /* All strings are automatically passed through \r\neach of the default filters the user\r\nHas set to true. This opens up a realm of possibilities like autoEscape, etc.\r\nList of shortened letters: d: default, e: escape, u: unescape. Escape and Unescape are also valid filter names*/\r\n    //e: false, // Escape is turned off by default for performance\r\n}\r\n\r\nexport var defaultFilterCache = {\r\n    start: \"\",\r\n    end: \"\"\r\n}\r\n\r\nexport function setDefaultFilters(obj) {\r\n    if (obj === \"clear\") {\r\n        defaultFilters = {}\r\n    } else {\r\n        for (var key in obj) {\r\n            if (obj.hasOwnProperty(key)) {\r\n                defaultFilters[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    cacheDefaultFilters()\r\n}\r\n\r\nexport function autoEscaping (bool) {\r\n    if (bool) {\r\n        autoEscape = true\r\n    } else {\r\n        autoEscape = false\r\n    }\r\n}\r\n\r\nexport var autoEscape = true;\r\n\r\nexport function cacheDefaultFilters() {\r\n    defaultFilterCache = {\r\n        start: \"\",\r\n        end: \"\"\r\n    }\r\n    for (var key in defaultFilters) {\r\n        if (!defaultFilters.hasOwnProperty(key) || !defaultFilters[key]) continue\r\n        defaultFilterCache.start += \"Sqrl.F.\" + key + \"(\"\r\n        defaultFilterCache.end += \")\"\r\n    }\r\n}\r\nexport function parseFiltered(initialString, filterString) {\r\n    var filtersArray;\r\n    var safe;\r\n    var filterStart = \"\"\r\n    var filterEnd = \"\"\r\n    if (filterString && filterString !== \"\") {\r\n        filtersArray = filterString.split('|')\r\n        for (var i = 0; i < filtersArray.length; i++) {\r\n            filtersArray[i] = filtersArray[i].trim()\r\n            if (filtersArray[i] === \"\") continue\r\n            if (filtersArray[i] === \"safe\") {\r\n                safe = true\r\n                continue\r\n            }\r\n            filterStart = 'Sqrl.F.' + filtersArray[i] + '(' + filterStart\r\n            filterEnd += \")\"\r\n        }\r\n    }\r\n    filterStart += defaultFilterCache.start\r\n    filterEnd += defaultFilterCache.end\r\n    if (!safe && autoEscape) {\r\n        filterStart += \"Sqrl.F.e(\"\r\n        filterEnd += \")\"\r\n    }\r\n\r\n    return filterStart + initialString + filterEnd;\r\n}","var helpers = { // For helpers. None included to make it more lightweight\r\n\r\n    Date: function (args, content, blocks, options) {\r\n        var today = new Date();\r\n        var dd = today.getDate();\r\n        var mm = today.getMonth() + 1; //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        if (dd < 10) {\r\n            dd = '0' + dd\r\n        }\r\n        if (mm < 10) {\r\n            mm = '0' + mm\r\n        }\r\n        today = mm + '/' + dd + '/' + yyyy;\r\n        return today\r\n    }\r\n}\r\n\r\n\r\nif (PRODUCTION) {\r\n    helpers = {}\r\n}\r\n\r\nexport default helpers","export {default as __express} from './express'\r\nexport {default as H} from './helpers'\r\nexport {default as Compile} from './compile'\r\nexport {defineFilter, defineHelper, Render} from './utils'\r\nexport {default as F, setDefaultFilters, autoEscape, autoEscaping} from './filters'\r\n","var nativeHelpers = {\r\n    if: {\r\n        helperStart: function (param) { //helperStart is called with (params, id) but id isn't needed\r\n            return \"if(\" + param + \"){\"\r\n        },\r\n        helperEnd: function () {\r\n            return \"}\"\r\n        },\r\n        blocks: {\r\n            else: function () { //called with (id) but neither param is needed\r\n                return \"}else{\"\r\n            }\r\n        }\r\n    },\r\n    each: {\r\n        helperStart: function (param, id) { //helperStart is called with (params, id) but id isn't needed\r\n            return \"for(var i=0;i<\" + param + \".length; i++){tmpltRes+=(function(hvals){var tmpltRes='';var hvals\" + id + \"=hvals;\"\r\n        },\r\n        helperEnd: function (param) {\r\n            return \"return tmpltRes})({this:\" + param + \"[i],index:i})};\"\r\n        }\r\n    },\r\n    foreach: {\r\n        helperStart: function (param, id) {\r\n            return \"for(var key in \" + param + \"){if(!\" + param + \".hasOwnProperty(key)) continue;tmpltRes+=(function(hvals){var tmpltRes='';var hvals\" + id + \"=hvals;\"\r\n        },\r\n        helperEnd: function (param) {\r\n            return \"return tmpltRes})({this:\" + param + \"[key], key: key})};\"\r\n        }\r\n    },\r\n    log: {\r\n        selfClosing: function (param) {\r\n            return \"console.log(\" + param + \");\"\r\n        }\r\n    }\r\n}\r\n//We don't need to export nativeHelpers for the runtime script\r\nif (RUNTIME) {\r\n    nativeHelpers = {}\r\n}\r\nexport default nativeHelpers","export default /{{ *?(?:(?:(?:(?:([a-zA-Z_$][\\w]* *?(?:[^\\s\\w\\($][^\\n]*)*?))|(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *))(?: *?(\\| *?[\\w$]+? *?)+?)?)|(?:([a-zA-Z_$][\\w]*) *?\\(([^\\n]*)\\) *?([\\w]*))|(?:\\/ *?([a-zA-Z_$][\\w]*))|(?:# *?([a-zA-Z_$][\\w]*))|(?:([a-zA-Z_$][\\w]*) *?\\(([^\\n]*)\\) *?\\/)) *?}}/g\r\nexport var paramHelperRefRegExp = /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[\\\\]@(?:[\\w$]*:)?[\\w$]+|@(?:([\\w$]*):)?([\\w$]+)/g\r\n\r\n\r\n//The default RegExp broken down:\r\n\r\n//Total RegEx:\r\n/* START REGEXP\r\n{{ *? //the beginning\r\n(?: //or for each possible tag\r\n(?: //if a global or helper ref\r\n(?: //choosing global or helper ref\r\n(?:([a-zA-Z_$][\\w]* *?(?:[^\\s\\w\\($][^\\n]*)*?)) //global reference\r\n|\r\n(?:@(?:([\\w$]+:|(?:\\.\\.\\/)+))? *(.+?) *) //helper reference\r\n)\r\n(?: *?(\\| *?[\\w$]+? *?)+?)? //filter\r\n) //end if a global or helper ref\r\n| //now if a helper oTag\r\n(?:([a-zA-Z_$][\\w]*) *?\\(([^\\n]*)\\) *?([\\w]*))\r\n| //now if a helper cTag\r\n(?:\\/ *?([a-zA-Z_$][\\w]*))\r\n| //now if a helper block\r\n(?:# *?([a-zA-Z_$][\\w]*))\r\n| //now for a self closing tag\r\n(?:([a-zA-Z_$][\\w]*) *?\\(([^\\n]*)\\) *?\\/)\r\n) //end or for each possible tag\r\n *?}}\t\t\r\n\r\n\r\nEND REGEXP*/\r\n/*\r\np1: global ref main\r\np2: helper ref id (with ':' after it) or path\r\np3: helper ref main\r\np4: filters\r\np5: helper name\r\np6: helper parameters\r\np7: helper id\r\np8: helper cTag name\r\np9: helper block name\r\np10: self closing helper name\r\np11: self closing helper params\r\nHere's the RegExp I use to turn the expanded version between START REGEXP and END REGEXP to a working one: I replace [\\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]| \\/\\/[\\w ']+\\n with nothing.\r\n*/","import F from './filters.js'\r\nimport Compile from './compile.js'\r\nimport * as Sqrl from './index.js'\r\nimport H from './helpers.js'\r\nimport nativeHelpers from './nativeHelpers.js'\r\nimport {paramHelperRefRegExp} from './regexps.js'\r\n\r\nexport function defineFilter(name, callback) {\r\n    F[name] = callback\r\n}\r\n\r\nexport function defineHelper(name, callback) {\r\n    H[name] = callback\r\n}\r\n\r\nexport function defineNativeHelper(name, obj) {\r\n    nativeHelpers[name] = obj\r\n}\r\n/*export function defineLayout(name, callback) {\r\n    Sqrl.Helpers[name] = callback\r\n    Sqrl.H = Sqrl.Helpers\r\n}*/\r\n\r\nexport function Render(template, options) {\r\n    if (typeof template === \"function\") {\r\n        return template(options, Sqrl)\r\n    } else if (typeof template === \"string\") {\r\n        var templateFunc = Compile(template)\r\n        return templateFunc(options, Sqrl)\r\n    }\r\n}\r\n\r\nexport function replaceParamHelpers(params) {\r\n    params = params.replace(paramHelperRefRegExp, function (m, p1, p2) { // p1 scope, p2 string\r\n        if (typeof p2 === 'undefined') {\r\n            return m\r\n        } else {\r\n            if (typeof p1 === 'undefined') {\r\n                p1 = ''\r\n            }\r\n            return 'hvals' + p1 + '.' + p2\r\n        }\r\n    })\r\n    return params\r\n} "],"sourceRoot":""}